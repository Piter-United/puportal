#= require jade/runtime
#= require jquery/jquery
#= require angular/angular
#= require angular-animate/angular-animate
#= require angular-cookies/angular-cookies
#= require angular-route/angular-route
#= require angular-sanitize/angular-sanitize
#= require angular-devise/lib/devise
#= require ng-file-upload/ng-file-upload-all
#= require selectize/dist/js/standalone/selectize
#= require moment/moment
#= require angular-ui-notification/src/angular-ui-notification

#= require_tree ./views
#= require_self
#= require_tree ./factories
#= require_tree ./filters
#= require_tree ./directives
#= require_tree ./controllers
#= require_tree ./interceptors



app = angular.module "app", [
  "ngCookies"
  "ngRoute"
  "ngAnimate"
  "ngFileUpload"
  "Devise"
  "ui-notification"
]

app.config ["$routeProvider", "$httpProvider", "AuthProvider" , "AuthInterceptProvider" , "NotificationProvider", ($routeProvider, $httpProvider, AuthProvider, AuthInterceptProvider, NotificationProvider)->
  NotificationProvider.setOptions({
    delay: 10000,
    startTop: 20,
    startRight: 10,
    verticalSpacing: 20,
    horizontalSpacing: 20,
    positionX: 'center',
    positionY: 'top',
    template: JST["views/shared/notification"]
  });

  $httpProvider.interceptors.push('flashHttpInterceptor')
  AuthInterceptProvider.interceptAuth(true);

  rp = $routeProvider

  rp.when "/",
    name: "index"
    template: JST["views/shared/index"]
    controller: "IndexCtrl"

  rp.when "/profile",
    name: "profile"
    template: JST["views/shared/profile"]
    controller: "ProfileCtrl"

  rp.when "/events",
    name: "events"
    template: JST["views/events/index"]
    controller: "EventsCtrl"

  rp.when "/events/new",
    name: "events"
    template: JST["views/events/new"]
    controller: "NewEventCtrl"

  rp.when "/communities",
    name: "communities"
    template: JST["views/communities/index"]
    controller: "CommunitiesCtrl"

  rp.when "/communities/new",
    name: "community"
    template: JST["views/communities/new"]
    controller: "NewCommunityCtrl"

  rp.when "/communities/:id",
    name: "community"
    template: JST["views/communities/show"]
    controller: "CommunityCtrl"

  rp.when "/events/:id",
    name: "event"
    template: JST["views/events/show"]
    controller: "EventCtrl"

  rp.when "/sign_in",
    name: "sign_in"
    template: JST["views/devise/sign_in"]
    controller: "SignInCtrl"

  rp.when "/sign_up",
    name: "sign_in"
    template: JST["views/devise/sign_up"]
    controller: "SignUpCtrl"
]

app.run ($rootScope, $window, $timeout, Data, Auth, Notification)->
  Auth.currentUser()

  $rootScope.$on "flash", (event, message)->
    Notification(message)

  $timeout ()->
    #openPopover = (e) ->
    #  e.preventDefault()
    #  closePopover()
    #  popover = $($(this).data('popover'))
    #  popover.toggleClass 'open'
    #  e.stopImmediatePropagation()

    #closePopover = (e) ->
    #  if $('.popover.open').length > 0
    #    $('.popover').removeClass 'open'

